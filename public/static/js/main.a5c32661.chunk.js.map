{"version":3,"sources":["components/LandingPage.js","components/AllUsers.js","components/SingleUser.js","components/AllCars.js","components/SingleCar.js","components/AccountSettings.js","components/SignupPage.js","App.js","serviceWorker.js","index.js"],"names":["UserDiv","styled","div","_templateObject","LandingPage","state","users","fetchUsers","_callee","response","regenerator_default","a","wrap","_context","prev","next","Axios","get","sent","_this","setState","data","stop","this","allUsers","map","user","i","react_default","createElement","key","username","Link","to","concat","id","Component","AllUsers_templateObject","console","log","AllUsers_UserDiv","SingleUser","cars","fetchUser","axios","abrupt","fetchCars","_callee2","_context2","userId","props","match","params","allCars","car","nickname","charge","AllCars","SingleCar","deleteCar","event","carId","delete","_this2","onClick","AccountSettings","password","successful","handleChange","updatedUser","Object","objectSpread","target","name","value","handleSubmit","currentUser","preventDefault","put","deleteUser","_callee3","_context3","onSubmit","type","onChange","SignupPage","newUser","redirect","new_user","post","Redirect","App","BrowserRouter","Switch","Route","exact","path","component","AllUsers","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a5c32661.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport Axios from 'axios'\nimport styled from 'styled-components'\n\nconst UserDiv = styled.div`\n\n`\n\nexport default class LandingPage extends Component {\n    state = {\n        users : []\n    }\n\n   async componentDidMount(){\nawait this.fetchUsers()\n    }\n\n fetchUsers = async() => {\nconst response = await Axios.get('/api/users')\nthis.setState({ users: response.data})\n\n}\n    render() {\n\n        const allUsers = this.state.users.map((user, i) => {\n            return (\n                <UserDiv key={i}>\n                    <h1>{user.username}</h1>\n                    <Link to={`/users/${user.id}`} >{user.id}</Link>\n                </UserDiv>\n            )\n        })\n    return (\n        <div>\n\n            <h1>Hello</h1>\n           <h1> {allUsers} </h1>\n           <Link to={`/users/new`}>Sign Up</Link>\n        </div>\n    \n    )\n    }\n}","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport Axios from 'axios'\nimport styled from 'styled-components'\n\nconst UserDiv = styled.div`\n\n`\n\nexport default class LandingPage extends Component {\n    state = {\n        users : []\n    }\n\n   async componentDidMount(){\nawait this.fetchUsers()\n    }\n\n fetchUsers = async() => {\nconst response = await Axios.get('/api/users')\nthis.setState({ users: response.data})\nconsole.log(this.state.users)\n}\n    render() {\n\n        const allUsers = this.state.users.map((user, i) => {\n            return (\n                <UserDiv key={i}>\n                    <h1>{user.username}</h1>\n                    <Link to={`/users/${user.id}`} >{user.id}</Link>\n                </UserDiv>\n            )\n        })\n    return (\n        <div>\n            <h1>Hello</h1>\n           <h1> {allUsers} </h1>\n        </div>\n    \n    )\n    }\n}","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\n\nexport default class SingleUser extends Component {\n    state = {\n        user: {},\n        cars: []\n    }\n\n    async componentDidMount(){\n        const userId = this.props.match.params.id\nconst cars = await this.fetchCars(userId)\n        const user = await this.fetchUser(userId)\n        this.setState({ user,cars })\n    }\n\n    fetchUser = async(id) => {\n\nconst response = await axios.get(`/api/users/${id}`)\nreturn response.data\n\n    }\n\n    fetchCars = async(id) => {\n        const response = await axios.get(`/api/users/${id}/cars`)\n        return response.data\n    }\n\n    render() {\n        const user = this.state.user\n\n        const allCars = this.state.cars.map((car, i) => {\n            return (\n                <div key={i}>\n                <h1>\n                <Link to={`/users/${user.id}/cars/${car.id}`} >{car.nickname}</Link>\n                </h1>\n                <h1>{car.charge}</h1>\n                </div>\n            )\n        })\n        return (\n            <div>\n                <Link to={`/users/${user.id}/settings`}>Settings</Link>\n            <h1>Hi {user.username}</h1>\n            <h1>Here are your cars</h1>\n          {allCars}\n            </div>\n        )\n    }\n}","import React, {Component} from 'react'\nimport styled from 'styled-components'\nimport axios from 'axios'\n\n\nexport default class AllCars extends Component {\nrender(){\n    return(\n<div>\n    <h1>Hello this is the all cars page</h1>\n</div>\n    )\n}\n}","import React, { Component } from 'react'\nimport axios from 'axios'\nimport styled from 'styled-components'\n\n\nexport default class SingleCar extends Component {\n    state = {\n        car : {}\n    }\n  async  componentDidMount(){\n      const carId = this.props.match.params.carId\n//const post = await this.fetchPost(userId)\nconst userId = this.props.match.params.id\n        const response = await axios.get(`/api/users/${userId}/cars/${carId}`)\n        this.setState({ car: response.data})\n    }\n    deleteCar = async(event) => {\n        //change this to match users id\n        const userId = this.props.match.params.userId\n        const carId = this.props.match.params.id\n        await axios.delete(`/api/users/${userId}/cars/${carId}`)\n    }\n    render(){\n        return(\n<div>\n    <button onClick={(event) => this.deleteCar(event)}>Delete Car</button>\n            <h1>You are at your single car page</h1>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\nimport axios from 'axios'\nimport styled from 'styled-components'\n\nexport default class AccountSettings extends Component {\n    state = {\n        user: {\n            username: '',\n            password: ''\n        },\n        successful: false\n    }\n\n    async componentDidMount(){\n        const userId = this.props.match.params.id\nconst user = await this.fetchUser(userId)\nthis.setState({ user })\n\n    }\n\n    fetchUser = async(id) => {\nconst response = await axios.get(`/api/users/${id}`)\nreturn response.data\n    }\n    handleChange = (event) => {\n        const updatedUser = {...this.state.user}\n        updatedUser[event.target.name] = event.target.value\n        this.setState({user:updatedUser})\n      \n   \n    }\n\n    handleSubmit = async(event) => {\n        event.preventDefault()\n        const currentUser = {...this.state.user}\n        const userId = this.props.match.params.id\n        await axios.put(`/api/users/${userId}`, currentUser)\nthis.setState({ successful: true})\n    }\n\n    deleteUser = async(event) => {\nconst userId = this.props.match.params.id\nawait axios.delete(`/api/users/${userId}`)\n        \n    }\n\nrender(){\n    if (this.state.successful) {\n        return <h1>Your update was successful!</h1>\n    }\n    return(\n        <div>\n            <h1>Settings Page</h1>\n<form onSubmit={this.handleSubmit}>\n<label>Username</label>\n<br></br>\n<input type=\"text\" name=\"username\" value={this.state.user.username} onChange={this.handleChange}/>\n<br></br>\n<label>Password</label>\n<br></br>\n<input type=\"text\" name=\"password\" value={this.state.user.password} onChange={this.handleChange}/>\n<br></br>\n<button type=\"submit\">Submit</button>\n</form>\n<button onClick={(event)=> this.deleteUser(event)}>Delete Your Account</button>\n\n        </div>\n    )\n}\n}","import React, { Component } from 'react'\nimport axios from 'axios'\nimport styled from 'styled-components'\nimport { Link, Redirect } from 'react-router-dom'\n\n\nexport default class SignupPage extends Component {\n    state = {\n        users: [],\n        newUser: {\n            password: '',\n            username: ''\n        },\n        redirect: false\n    }\n\n  async componentDidMount(){\nconst response = await axios.get(`/api/users`)\nthis.setState({ users: response.data })\n\n    }\n\n    handleChange = (event) => {\n        const new_user = {...this.state.newUser}\n        new_user[event.target.name] = event.target.value\n        this.setState({ newUser: new_user})\n    }\n    handleSubmit = async(event) => {\nevent.preventDefault()\nawait axios.post('/api/users', this.state.newUser)\nthis.setState({ redirect: true })\n    }\n\n    render(){\n        if (this.state.redirect) {\n            return <Redirect to='/users'/>\n        }\n        return(\n            <div>\n                <h1>This is the Signup Page</h1>\n                <form onSubmit={this.handleSubmit}>\n                <label> Username </label>\n                <br></br>\n                <input type=\"text\" name=\"username\" value={this.state.newUser.username} onChange={this.handleChange} />\n                <br></br>\n                <label>Password</label>\n                <br></br>\n                <input type=\"text\" name=\"password\" value={this.state.newUser.password} onChange={this.handleChange} />\n                <br></br>\n                <button type=\"submit\">Submit</button>\n                </form>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom'\nimport LandingPage from './components/LandingPage'\nimport AllUsers from './components/AllUsers'\nimport SingleUser from './components/SingleUser'\nimport AllCars from './components/AllCars'\nimport SingleCar from './components/SingleCar'\nimport AccountSettings from './components/AccountSettings'\nimport SignupPage from './components/SignupPage'\n\n\nimport './App.css';\n\nclass App extends Component {\n  render() {\n \n    return (\n     \n  <Router>\n    <Switch>\n      <Route exact path='/' component={LandingPage} />\n      <Route exact path='/users' component={AllUsers} />\n      <Route exact path='/users/new' component={SignupPage} />\n      <Route exact path='/users/:id' component={SingleUser} />\n      <Route exact path='/users/:id/cars' component= {AllCars} />\n      <Route exact path='/users/:id/cars/:id' component = {SingleCar} />\n      <Route exact path='/users/:id/settings' component = {AccountSettings} />\n      \n\n    </Switch>\n  </Router>\n    );\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}